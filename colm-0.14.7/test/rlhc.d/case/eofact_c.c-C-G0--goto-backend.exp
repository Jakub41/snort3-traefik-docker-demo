#include <string.h>
#include <stdio.h>








static const char  _eofact_actions [] = { 0, 1, 0, 1, 1, 1, 2, 1, 3, 2, 0, 2, 0 ,  };
static const char  _eofact_eof_actions [] = { 0, 9, 1, 1, 1, 1, 5, 5, 5, 5, 3, 0, 7, 0 ,  };
static const char  _eofact_nfa_targs [] = { 0, 0 ,  };
static const char  _eofact_nfa_offsets [] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,  };
static const char  _eofact_nfa_push_actions [] = { 0, 0 ,  };
static const char  _eofact_nfa_pop_trans [] = { 0, 0 ,  };
static const int  eofact_start  = 1;
static const int  eofact_first_final  = 10;
static const int  eofact_error  = 0;
static const int  eofact_en_main  = 1;
int cs;
int blen;
char buffer[1024];

void init()
{

	{
		cs = ( int ) eofact_start;
	}
}

void exec( char *data, int len )
{
	char *p = data;
	char *pe = data + len;
	char *eof = pe;
	
	{
	
		if ( p == pe  )
		goto _test_eof;
		
		if ( cs == 0  )
		goto _out;
		
		_resume:
		switch ( cs  ) {
			case 1:
			switch ( ((*( p  ))
			) ) {
				case 104:
				{
					goto ctr0;
				}
				case 116:
				{
					goto ctr2;
				}
				
			}
			{
				goto ctr1;
			}
			case 0:
			goto _out;
			case 2:
			if ( ((*( p  ))
			)== 101  )
			{
				goto ctr3;
			}
			
			{
				goto ctr1;
			}
			case 3:
			if ( ((*( p  ))
			)== 108  )
			{
				goto ctr4;
			}
			
			{
				goto ctr1;
			}
			case 4:
			if ( ((*( p  ))
			)== 108  )
			{
				goto ctr5;
			}
			
			{
				goto ctr1;
			}
			case 5:
			if ( ((*( p  ))
			)== 111  )
			{
				goto ctr6;
			}
			
			{
				goto ctr1;
			}
			case 10:
			if ( ((*( p  ))
			)== 10  )
			{
				goto ctr11;
			}
			
			{
				goto ctr1;
			}
			case 11:
			{
				goto ctr1;
			}
			case 6:
			if ( ((*( p  ))
			)== 104  )
			{
				goto ctr7;
			}
			
			{
				goto ctr1;
			}
			case 7:
			if ( ((*( p  ))
			)== 101  )
			{
				goto ctr8;
			}
			
			{
				goto ctr1;
			}
			case 8:
			if ( ((*( p  ))
			)== 114  )
			{
				goto ctr9;
			}
			
			{
				goto ctr1;
			}
			case 9:
			if ( ((*( p  ))
			)== 101  )
			{
				goto ctr10;
			}
			
			{
				goto ctr1;
			}
			case 12:
			{
				goto ctr1;
			}
			
		}
		ctr1: cs = 0;
		goto _again;
		ctr0: cs = 2;
		goto _again;
		ctr3: cs = 3;
		goto _again;
		ctr4: cs = 4;
		goto _again;
		ctr5: cs = 5;
		goto _again;
		ctr2: cs = 6;
		goto _again;
		ctr7: cs = 7;
		goto _again;
		ctr8: cs = 8;
		goto _again;
		ctr9: cs = 9;
		goto _again;
		ctr6: cs = 10;
		goto _again;
		ctr11: cs = 11;
		goto _again;
		ctr10: cs = 12;
		goto _again;
		
		_again:
		if ( cs == 0  )
		goto _out;
		
		p += 1;
		if ( p != pe  )
		goto _resume;
		
		_test_eof: {}
		if ( p == eof  )
		{
			const char  *__acts;
			unsigned int __nacts;
			__acts = _eofact_actions + _eofact_eof_actions[cs];
			__nacts = ( unsigned int  ) (*( __acts  ))
			;
			__acts += 1;
			while ( __nacts > 0  )
			{
				switch ( (*( __acts  ))
				) {
					case 0:
					{
						printf( "%s", "a1\n" );
						
					}
					
					break;
					case 1:
					{
						printf( "%s", "a2\n" );
						
					}
					
					break;
					case 2:
					{
						printf( "%s", "a3\n" );
						
					}
					
					break;
					case 3:
					{
						printf( "%s", "a4\n" );
						
					}
					
					break;
					
				}
				__acts += 1;
				__nacts -= 1;
			}
			
		}
		
		
		_out: {}
	}
}

void finish( )
{
	if ( cs >= eofact_first_final )
	printf( "ACCEPT\n" );
	else
	printf( "FAIL\n" );
}

char *inp[] = {
	"",
	"h",
	"hell",
	"hello",
	"hello\n",
	"t",
	"ther",
	"there",
	"friend",
};

int inplen = 9;

int main( )
{
	int i;
	for ( i = 0; i < inplen; i++ ) {
		init();
		exec( inp[i], strlen(inp[i]) );
		finish();
	}
	return 0;
}

