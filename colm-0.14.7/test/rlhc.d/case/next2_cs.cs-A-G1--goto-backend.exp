using System;
// Disables lots of warnings that appear in the test suite
#pragma warning disable 0168, 0169, 0219, 0162, 0414
namespace Test {
	class Test
	{
		int target;
		int last;
		
		
		
		
		static readonly sbyte  []_next2_nfa_targs = { 0, 0,  };
		static readonly sbyte  []_next2_nfa_offsets = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  };
		static readonly sbyte  []_next2_nfa_push_actions = { 0, 0,  };
		static readonly sbyte  []_next2_nfa_pop_trans = { 0, 0,  };
		static readonly int  next2_start  = 19;
		static readonly int  next2_first_final  = 19;
		static readonly int  next2_error  = 0;
		static readonly int  next2_en_unused  = 2;
		static readonly int  next2_en_one  = 8;
		static readonly int  next2_en_two  = 11;
		static readonly int  next2_en_three  = 14;
		static readonly int  next2_en_main  = 19;
		int cs;
		
		void init()
		{
		
			{
				cs = (int)next2_start;
			}
		}
		
		void exec( char[] data, int len )
		{
			int p = 0;
			int pe = len;
			int eof = len;
			string _s;
			char [] buffer = new char [1024];
			int blen = 0;
			
			{
				if ( p == pe  )
				goto _test_eof;
				
				if ( cs == 0 )
				goto _out;
				
				_resume:
				switch ( cs  ) {
					case 19:
					switch ( ( data[p ])  ) {
						case '\u000a':
						{
							goto ctr0;
						}
						case '\u0031':
						{
							goto ctr19;
						}
						case '\u0032':
						{
							goto ctr20;
						}
						case '\u0033':
						{
							goto ctr21;
						}
						
					}
					{
						goto ctr1;
					}
					case 0:
					goto _out;
					case 1:
					if ( ( data[p ]) == '\u0078' )
					{
						goto ctr0;
					}
					
					{
						goto ctr1;
					}
					case 2:
					if ( ( data[p ]) == '\u0075' )
					{
						goto ctr2;
					}
					
					{
						goto ctr1;
					}
					case 3:
					if ( ( data[p ]) == '\u006e' )
					{
						goto ctr3;
					}
					
					{
						goto ctr1;
					}
					case 4:
					if ( ( data[p ]) == '\u0075' )
					{
						goto ctr4;
					}
					
					{
						goto ctr1;
					}
					case 5:
					if ( ( data[p ]) == '\u0073' )
					{
						goto ctr5;
					}
					
					{
						goto ctr1;
					}
					case 6:
					if ( ( data[p ]) == '\u0065' )
					{
						goto ctr6;
					}
					
					{
						goto ctr1;
					}
					case 7:
					if ( ( data[p ]) == '\u0064' )
					{
						goto ctr7;
					}
					
					{
						goto ctr1;
					}
					case 20:
					{
						goto ctr1;
					}
					case 8:
					if ( ( data[p ]) == '\u006f' )
					{
						goto ctr8;
					}
					
					{
						goto ctr1;
					}
					case 9:
					if ( ( data[p ]) == '\u006e' )
					{
						goto ctr9;
					}
					
					{
						goto ctr1;
					}
					case 10:
					if ( ( data[p ]) == '\u0065' )
					{
						goto ctr10;
					}
					
					{
						goto ctr1;
					}
					case 21:
					{
						goto ctr1;
					}
					case 11:
					if ( ( data[p ]) == '\u0074' )
					{
						goto ctr11;
					}
					
					{
						goto ctr1;
					}
					case 12:
					if ( ( data[p ]) == '\u0077' )
					{
						goto ctr12;
					}
					
					{
						goto ctr1;
					}
					case 13:
					if ( ( data[p ]) == '\u006f' )
					{
						goto ctr13;
					}
					
					{
						goto ctr1;
					}
					case 22:
					{
						goto ctr1;
					}
					case 14:
					if ( ( data[p ]) == '\u0074' )
					{
						goto ctr14;
					}
					
					{
						goto ctr1;
					}
					case 15:
					if ( ( data[p ]) == '\u0068' )
					{
						goto ctr15;
					}
					
					{
						goto ctr1;
					}
					case 16:
					if ( ( data[p ]) == '\u0072' )
					{
						goto ctr16;
					}
					
					{
						goto ctr1;
					}
					case 17:
					if ( ( data[p ]) == '\u0065' )
					{
						goto ctr17;
					}
					
					{
						goto ctr1;
					}
					case 18:
					if ( ( data[p ]) == '\u0065' )
					{
						goto ctr18;
					}
					
					{
						goto ctr1;
					}
					case 23:
					{
						goto ctr1;
					}
					
				}
				ctr1: cs = 0;
				goto _again;
				ctr21: cs = 1;
				goto f5;
				ctr2: cs = 3;
				goto _again;
				ctr3: cs = 4;
				goto _again;
				ctr4: cs = 5;
				goto _again;
				ctr5: cs = 6;
				goto _again;
				ctr6: cs = 7;
				goto _again;
				ctr8: cs = 9;
				goto _again;
				ctr9: cs = 10;
				goto _again;
				ctr11: cs = 12;
				goto _again;
				ctr12: cs = 13;
				goto _again;
				ctr14: cs = 15;
				goto _again;
				ctr15: cs = 16;
				goto _again;
				ctr16: cs = 17;
				goto _again;
				ctr17: cs = 18;
				goto _again;
				ctr0: cs = 19;
				goto _again;
				ctr19: cs = 19;
				goto f3;
				ctr20: cs = 19;
				goto f4;
				ctr7: cs = 20;
				goto _again;
				ctr10: cs = 21;
				goto f0;
				ctr13: cs = 22;
				goto f1;
				ctr18: cs = 23;
				goto f2;
				
				f0:
				{Console.Write( "one\n" );target = 19;
					cs = (target);}
				
				goto _again;
				f1:
				{Console.Write( "two\n" );target = 19;
					cs = (target);}
				
				goto _again;
				f2:
				{Console.Write( "three\n" );target = 19;
					cs = (target);}
				
				goto _again;
				f3:
				{target = 8;
					cs = (target);last = 1;
				}
				
				goto _again;
				f4:
				{target = 11;
					cs = (target);last = 2;
				}
				
				goto _again;
				f5:
				{if ( last == 2 )
					{
						target = 14;
						cs = (target);
					} 
					last = 3;
				}
				
				goto _again;
				
				_again:
				if ( cs == 0 )
				goto _out;
				
				p+= 1;
				if ( p != pe  )
				goto _resume;
				
				_test_eof: {}
				_out: {}
			}
		}
		
		void finish( )
		{
			if ( cs >= next2_first_final )
			Console.WriteLine( "ACCEPT" );
			else
			Console.WriteLine( "FAIL" );
		}
		
		static readonly string[] inp = {
			"1one3x2two3three\n",
		};
		
		
		static readonly int inplen = 1;
		
		public static void Main (string[] args)
		{
			Test machine = new Test();
			for ( int i = 0; i < inplen; i++ ) {
				machine.init();
				machine.exec( inp[i].ToCharArray(), inp[i].Length );
				machine.finish();
			}
		}
	}
}
