host( "working/scan2_c.rl", 1 ) @{/*
	* @@LANG: c
	* @@GENERATED: true
	*/
	
	#include <string.h>
	#include <stdio.h>
	
	char * ts ;
	char * te ;
	int act ;
	int token ;
	
	
	
	
	
}@
array s8 _scanner_to_state_actions( 0, 3 ) = { 0, 3, 0, 0 };

array s8 _scanner_from_state_actions( 0, 4 ) = { 0, 4, 0, 0 };

array s8 _scanner_nfa_targs( 0, 0 ) = { 0, 0 };

array s8 _scanner_nfa_offsets( 0, 0 ) = { 0, 0, 0, 0 };

array s8 _scanner_nfa_push_actions( 0, 0 ) = { 0, 0 };

array s8 _scanner_nfa_pop_trans( 0, 0 ) = { 0, 0 };

value int scanner_start = 1;
value int scanner_first_final = 1;
value int scanner_error = -1;

value int scanner_en_main = 1;

host( "working/scan2_c.rl", 34 ) @{
	int cs;
	int blen;
	char buffer[1024];
	
	void init()
	{
	}@
	{
		cs = cast(int)scanner_start;
		ts = nil;
		te = nil;
		act = 0;
	}
	host( "working/scan2_c.rl", 41 ) @{
	}
	
	void exec( char *data, int len )
	{
		char *p = data;
		char *pe = data + len;
		char *eof = pe;
	}@
	{
		if ( p == pe )
		goto _test_eof;
		_resume:
		switch ( _scanner_from_state_actions[cs] ) {
			case 4{
				host( "NONE", 1 ) ${${ts = p;}$}$
			}
		}
		
		switch ( cs ) {
			case 1:
			switch( ( deref( data, p )) ) {
				case 97: {
					goto ctr5;
				}
				case 98: {
					goto ctr6;
				}
			}
			{
				goto ctr4;
			}
			case 2:
			if ( ( deref( data, p )) == 99 ) {
				goto ctr3;
			}
			if ( 97 <= ( deref( data, p )) && ( deref( data, p )) <= 98 ) {
				goto ctr2;
			}
			{
				goto ctr7;
			}
			case 0:
			if ( ( deref( data, p )) == 99 ) {
				goto ctr3;
			}
			if ( 97 <= ( deref( data, p )) && ( deref( data, p )) <= 98 ) {
				goto ctr2;
			}
			{
				goto ctr7;
			}
		}
		
		ctr2: cs = 0; goto _again;
		ctr7: cs = 1; goto f0;
		ctr3: cs = 1; goto f1;
		ctr4: cs = 1; goto f4;
		ctr5: cs = 2; goto f5;
		ctr6: cs = 2; goto f6;
		
		f1:
		host( "working/scan2_c.rl", 23 ) ${${te = p+1;host( "working/scan2_c.rl", 23 ) ${printf( "%s", "pat2\n" );
				}$}$}$
		goto _again;
		f4:
		host( "working/scan2_c.rl", 26 ) ${${te = p+1;host( "working/scan2_c.rl", 26 ) ${printf( "%s", "any\n" );
				}$}$}$
		goto _again;
		f0:
		host( "NONE", 1 ) ${${switch( act ) {
					case 1 {
						p = ((te))-1;
						host( "working/scan2_c.rl", 20 ) ${printf( "%s", "pat1\n" );
						}$ }
					case 3 {
						p = ((te))-1;
						host( "working/scan2_c.rl", 26 ) ${printf( "%s", "any\n" );
						}$ }
				}}$
		}$
		goto _again;
		f5:
		host( "NONE", 1 ) ${${te = p+1;}$}$	host( "working/scan2_c.rl", 20 ) ${${act = 1;}$}$
		goto _again;
		f6:
		host( "NONE", 1 ) ${${te = p+1;}$}$	host( "working/scan2_c.rl", 26 ) ${${act = 3;}$}$
		goto _again;
		
		_again:
		switch ( _scanner_to_state_actions[cs] ) {
			case 3{
				host( "NONE", 1 ) ${${ts = nil;}$}$
			}
		}
		
		p+= 1;
		if ( p != pe )
		goto _resume;
		_test_eof: {}
		if ( p == eof )
		{
			switch ( cs ) {
				case 2: goto ctr7;
				case 0: goto ctr7;
			}
		}
		
	}
	host( "working/scan2_c.rl", 49 ) @{
	}
	
	void finish( )
	{
		if ( cs >= scanner_first_final )
		printf( "ACCEPT\n" );
		else
		printf( "FAIL\n" );
	}
	
	char *inp[] = {
		"a",
	};
	
	int inplen = 1;
	
	int main( )
	{
		int i;
		for ( i = 0; i < inplen; i++ ) {
			init();
			exec( inp[i], strlen(inp[i]) );
			finish();
		}
		return 0;
	}
	
}@