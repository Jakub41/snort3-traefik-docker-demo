#include <string.h>
#include <stdio.h>








static const char  _state_act_to_state_actions [] = { 0, 0, 1, 4, 6, 4, 0 ,  };
static const char  _state_act_from_state_actions [] = { 0, 0, 2, 5, 7, 5, 0 ,  };
static const char  _state_act_nfa_targs [] = { 0, 0 ,  };
static const char  _state_act_nfa_offsets [] = { 0, 0, 0, 0, 0, 0, 0 ,  };
static const char  _state_act_nfa_push_actions [] = { 0, 0 ,  };
static const char  _state_act_nfa_pop_trans [] = { 0, 0 ,  };
static const int  state_act_start  = 4;
static const int  state_act_first_final  = 4;
static const int  state_act_error  = 0;
static const int  state_act_en_main  = 4;
static const int  state_act_en_main_line_again  = 3;
int cs;
int blen;
char buffer[1024];

void init()
{

	{
		cs = ( int ) state_act_start;
	}
}

void exec( char *data, int len )
{
	char *p = data;
	char *pe = data + len;
	
	{
		if ( p == pe  )
		goto _test_eof;
		
		if ( cs == 0  )
		goto _out;
		
		_resume:
		switch ( _state_act_from_state_actions[cs] ) {
			case 5:
			{
				printf( "%s", "b2\n" );
				
			}
			
			break;
			case 2:
			{
				printf( "%s", "c2\n" );
				
			}
			
			break;
			case 7:
			{
				printf( "%s", "a2\n" );
				
			}
			{
				printf( "%s", "b2\n" );
				
			}
			
			break;
			
		}
		switch ( cs  ) {
			case 4:
			if ( ((*( p  ))
			)== 104  )
			{
				goto ctr3;
			}
			
			{
				goto ctr1;
			}
			case 0:
			goto _out;
			case 1:
			if ( ((*( p  ))
			)== 105  )
			{
				goto ctr0;
			}
			
			{
				goto ctr1;
			}
			case 2:
			if ( ((*( p  ))
			)== 10  )
			{
				goto ctr2;
			}
			
			{
				goto ctr1;
			}
			case 5:
			if ( ((*( p  ))
			)== 104  )
			{
				goto ctr3;
			}
			
			{
				goto ctr1;
			}
			case 3:
			if ( ((*( p  ))
			)== 104  )
			{
				goto ctr3;
			}
			
			{
				goto ctr1;
			}
			
		}
		ctr1: cs = 0;
		goto _again;
		ctr3: cs = 1;
		goto _again;
		ctr0: cs = 2;
		goto _again;
		ctr2: cs = 5;
		goto f2;
		
		f2:
		{
			cs = 3;
		}
		
		goto _again;
		
		_again:
		switch ( _state_act_to_state_actions[cs] ) {
			case 4:
			{
				printf( "%s", "b1\n" );
				
			}
			
			break;
			case 1:
			{
				printf( "%s", "c1\n" );
				
			}
			
			break;
			case 6:
			{
				printf( "%s", "a1\n" );
				
			}
			{
				printf( "%s", "b1\n" );
				
			}
			
			break;
			
		}
		if ( cs == 0  )
		goto _out;
		
		p+= 1;
		if ( p != pe  )
		goto _resume;
		
		_test_eof: {}
		_out: {}
	}
}

void finish( )
{
	if ( cs >= state_act_first_final )
	printf( "ACCEPT\n" );
	else
	printf( "FAIL\n" );
}

char *inp[] = {
	"hi\nhi\n",
};

int inplen = 1;

int main( )
{
	int i;
	for ( i = 0; i < inplen; i++ ) {
		init();
		exec( inp[i], strlen(inp[i]) );
		finish();
	}
	return 0;
}

