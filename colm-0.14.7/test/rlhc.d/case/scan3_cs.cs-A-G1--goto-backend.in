host( "working/scan3_cs.rl", 1 ) @{/*
	* @@LANG: csharp
	* @@GENERATED: true
	*/
	
	using System;
	// Disables lots of warnings that appear in the test suite
	#pragma warning disable 0168, 0169, 0219, 0162, 0414
	namespace Test {
		class Test
		{
			int ts;
			int te;
			int act;
			int token;
			
			
			
			
		}@
		array s8 _scanner_to_state_actions( 0, 1 ) = { 0, 1, 0, 0 };
		
		array s8 _scanner_from_state_actions( 0, 2 ) = { 0, 2, 0, 0 };
		
		array s8 _scanner_nfa_targs( 0, 0 ) = { 0, 0 };
		
		array s8 _scanner_nfa_offsets( 0, 0 ) = { 0, 0, 0, 0 };
		
		array s8 _scanner_nfa_push_actions( 0, 0 ) = { 0, 0 };
		
		array s8 _scanner_nfa_pop_trans( 0, 0 ) = { 0, 0 };
		
		value int scanner_start = 1;
		value int scanner_first_final = 1;
		value int scanner_error = 0;
		
		value int scanner_en_main = 1;
		
		host( "working/scan3_cs.rl", 31 ) @{
			int cs;
			
			void init()
			{
			}@
			{
				cs = cast(int)scanner_start;
				ts = nil;
				te = nil;
				act = 0;
			}
			host( "working/scan3_cs.rl", 36 ) @{
			}
			
			void exec( char[] data, int len )
			{
				int p = 0;
				int pe = len;
				int eof = len;
				string _s;
				char [] buffer = new char [1024];
				int blen = 0;
			}@
			{
				if ( p == pe )
				goto _test_eof;
				if ( cs == 0 )
				goto _out;
				_resume:
				switch ( _scanner_from_state_actions[cs] ) {
					case 2{
						host( "NONE", 1 ) ${${ts = p;}$}$
					}
				}
				
				switch ( cs ) {
					case 1:
					switch( ( deref( data, p )) ) {
						case c(97): {
							goto ctr0;
						}
						case c(98): {
							goto ctr2;
						}
					}
					{
						goto ctr1;
					}
					case 0:
					goto _out;
					case 2:
					{
						goto ctr5;
					}
				}
				
				ctr1: cs = 0; goto _again;
				ctr4: cs = 1; goto f4;
				ctr0: cs = 2; goto f2;
				ctr2: cs = 2; goto f3;
				ctr5: cs = 2; goto f5;
				
				f4:
				host( "NONE", 1 ) ${${switch( act ) {
							case 1 {
								p = ((te))-1;
								host( "working/scan3_cs.rl", 23 ) ${Console.Write( "pat1\n" );}$ }
							case 2 {
								p = ((te))-1;
								host( "working/scan3_cs.rl", 24 ) ${Console.Write( "pat2\n" );}$ }
							case 3 {
								p = ((te))-1;
								host( "working/scan3_cs.rl", 25 ) ${Console.Write( "pat3\n" );}$ }
						}}$
				}$
				goto _again;
				f2:
				host( "NONE", 1 ) ${${te = p+1;}$}$	host( "working/scan3_cs.rl", 23 ) ${${act = 1;}$}$
				goto _again;
				f3:
				host( "NONE", 1 ) ${${te = p+1;}$}$	host( "working/scan3_cs.rl", 24 ) ${${act = 2;}$}$
				goto _again;
				f5:
				host( "NONE", 1 ) ${${te = p+1;}$}$	host( "working/scan3_cs.rl", 25 ) ${${act = 3;}$}$
				goto _again;
				
				_again:
				switch ( _scanner_to_state_actions[cs] ) {
					case 1{
						host( "NONE", 1 ) ${${ts = nil;}$}$
					}
				}
				
				if ( cs == 0 )
				goto _out;
				p+= 1;
				if ( p != pe )
				goto _resume;
				_test_eof: {}
				if ( p == eof )
				{
					switch ( cs ) {
						case 2: goto ctr4;
					}
				}
				
				_out: {}
			}
			host( "working/scan3_cs.rl", 47 ) @{
			}
			
			void finish( )
			{
				if ( cs >= scanner_first_final )
				Console.WriteLine( "ACCEPT" );
				else
				Console.WriteLine( "FAIL" );
			}
			
			static readonly string[] inp = {
				"ab89",
			};
			
			
			static readonly int inplen = 1;
			
			public static void Main (string[] args)
			{
				Test machine = new Test();
				for ( int i = 0; i < inplen; i++ ) {
					machine.init();
					machine.exec( inp[i].ToCharArray(), inp[i].Length );
					machine.finish();
				}
			}
		}
	}
}@