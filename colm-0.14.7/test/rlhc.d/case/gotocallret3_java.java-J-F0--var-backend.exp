class gotocallret3_java
{
	char comm ;
	int top ;
	int stack [] = new int[32];
	
	
	
	
	
	private static byte  _gotocallret_actions [] = { 0, 1, 0, 1, 1, 1, 2, 1, 3, 1, 5, 1, 7, 1, 8, 2, 0, 1, 2, 4, 6, 0 ,  };
	private static char  _gotocallret_trans_keys [] = { 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 4, 5, 3, 3, 3, 5, 1, 0, 4, 5, 3, 3, 0,  };
	private static byte  _gotocallret_char_class [] = { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0 ,  };
	private static byte  _gotocallret_index_offsets [] = { 0, 0, 1, 2, 3, 4, 6, 7, 10, 10, 12, 0 ,  };
	private static byte  _gotocallret_indices [] = { 1, 2, 4, 6, 8, 8, 9, 10, 0, 10, 8, 8, 9, 0 ,  };
	private static byte  _gotocallret_index_defaults [] = { 0, 0, 0, 3, 5, 7, 7, 0, 11, 7, 7, 0 ,  };
	private static byte  _gotocallret_trans_cond_spaces [] = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0 ,  };
	private static byte  _gotocallret_cond_targs [] = { 0, 2, 7, 4, 8, 4, 8, 0, 9, 10, 1, 0, 0 ,  };
	private static byte  _gotocallret_cond_actions [] = { 13, 18, 11, 1, 15, 0, 3, 7, 0, 0, 9, 0, 0 ,  };
	private static byte  _gotocallret_eof_actions [] = { 0, 13, 13, 5, 5, 7, 7, 0, 5, 0, 0, 0 ,  };
	private static byte  _gotocallret_nfa_targs [] = { 0, 0 ,  };
	private static byte  _gotocallret_nfa_offsets [] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,  };
	private static byte  _gotocallret_nfa_push_actions [] = { 0, 0 ,  };
	private static byte  _gotocallret_nfa_pop_trans [] = { 0, 0 ,  };
	private static int  gotocallret_start  = 7;
	private static int  gotocallret_first_final  = 7;
	private static int  gotocallret_error  = 0;
	private static int  gotocallret_en_garble_line  = 3;
	private static int  gotocallret_en_alp_comm  = 5;
	private static int  gotocallret_en_dig_comm  = 6;
	private static int  gotocallret_en_main  = 7;
	int cs;
	
	void init()
	{
		{
			cs = (int)gotocallret_start;
			top = 0;
			
		}
	}
	
	void exec( char data[], int len )
	{
		char buffer [] = new char[1024];
		int blen = 0;
		int p = 0;
		int pe = len;
		
		int eof = len;
		String _s;
		{
			int _trans = 0;
			int _have = 0;
			int _cont = 1;
			int _acts;
			int _nacts;
			int _keys;
			int _inds;
			while ( _cont == 1  )
			{
				if ( cs == 0  )
				_cont = 0;
				
				_have = 0;
				if ( p == pe  )
				{
					if ( p == eof  )
					{
						if ( _have == 0  )
						{
							int __acts;
							int __nacts;
							__acts = _gotocallret_eof_actions[cs] ;
							__nacts = (int )_gotocallret_actions[__acts ];
							__acts += 1;
							while ( __nacts > 0  )
							{
								switch ( _gotocallret_actions[__acts ] ) {
									case 2 :
									{
										System.out.print( "error: failed to recover\n" );
										
									}
									
									break;
									case 3 :
									{
										{
											p = p - 1;
											
										}
										{
											top-= 1;
											cs = stack[top];
											
										}
										
									}
									
									break;
									case 8 :
									{
										{
											p = p - 1;
											
										}
										{
											cs = 3;
											
										}
										
									}
									
									break;
									
								}
								__nacts -= 1;
								__acts += 1;
								
							}
							
							
						}
						
						
					}
					
					if ( _have == 0  )
					_cont = 0;
					
					
				}
				
				if ( _cont == 1  )
				{
					if ( _have == 0  )
					{
						_keys = (cs<<1) ;
						_inds = _gotocallret_index_offsets[cs] ;
						if ( ( data[p ]) <= 122 && ( data[p ]) >= 10  )
						{
							int _ic = (int)_gotocallret_char_class[(int)( data[p ]) - 10];
							if ( _ic <= (int)_gotocallret_trans_keys[_keys+1 ]&& _ic >= (int)_gotocallret_trans_keys[_keys ] )
							_trans = (int )_gotocallret_indices[_inds + (int)( _ic - (int)_gotocallret_trans_keys[_keys ])  ];
							
							else
							_trans = (int )_gotocallret_index_defaults[cs];
							
							
						}
						
						else
						{
							_trans = (int )_gotocallret_index_defaults[cs];
							
						}
						
						
					}
					
					if ( _cont == 1  )
					{
						cs = (int)_gotocallret_cond_targs[_trans];
						if ( _gotocallret_cond_actions[_trans] != 0  )
						{
							_acts = _gotocallret_cond_actions[_trans] ;
							_nacts = (int )_gotocallret_actions[_acts ];
							_acts += 1;
							while ( _nacts > 0  )
							{
								switch ( _gotocallret_actions[_acts ] ) {
									case 0 :
									{
										System.out.print( "error: garbling line\n" );
										
									}
									
									break;
									case 1 :
									{
										{
											cs = 7;
											
										}
										
									}
									
									break;
									case 3 :
									{
										{
											p = p - 1;
											
										}
										{
											top-= 1;
											cs = stack[top];
											
										}
										
									}
									
									break;
									case 4 :
									{
										if ( comm >= 97 )
										{
											{
												stack[top] = cs;
												top += 1;
												cs = 5;
												
											}
										} 
										else {
											{
												stack[top] = cs;
												top += 1;
												cs = 6;
												
											}
										}
										
									}
									
									break;
									case 5 :
									{
										comm = (( data[p ]));
										
									}
									
									break;
									case 6 :
									{
										System.out.print( "prints\n" );
										
									}
									
									break;
									case 7 :
									{
										System.out.print( "correct command\n" );
										
									}
									
									break;
									case 8 :
									{
										{
											p = p - 1;
											
										}
										{
											cs = 3;
											
										}
										
									}
									
									break;
									
								}
								_nacts -= 1;
								_acts += 1;
								
							}
							
							
						}
						
						if ( cs == 0  )
						_cont = 0;
						
						if ( _cont == 1  )
						p += 1;
						
						
					}
					
					
				}
				
				
			}
			
			
		}
	}
	
	void finish( )
	{
		if ( cs >= gotocallret_first_final )
		System.out.println( "ACCEPT" );
		else
		System.out.println( "FAIL" );
	}
	
	static final String inp[] = {
		"lkajsdf\n",
		"2134\n",
		"(\n",
		"\n",
		"*234234()0909 092 -234aslkf09`1 11\n",
		"1\n",
		"909\n",
		"1 a\n",
		"11 1\n",
		"a 1\n",
		"aa a\n",
		"1 1\n",
		"1 123456\n",
		"a a\n",
		"a abcdef\n",
		"h",
		"a aa1",
	};
	
	static final int inplen = 17;
	
	public static void main (String[] args)
	{
		gotocallret3_java machine = new gotocallret3_java();
		for ( int i = 0; i < inplen; i++ ) {
			machine.init();
			machine.exec( inp[i].toCharArray(), inp[i].length() );
			machine.finish();
		}
	}
}
