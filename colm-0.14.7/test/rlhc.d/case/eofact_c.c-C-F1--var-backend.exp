#include <string.h>
#include <stdio.h>








static const char  _eofact_trans_keys [] = { 1, 0, 3, 7, 2, 2, 4, 4, 4, 4, 5, 5, 3, 3, 2, 2, 6, 6, 2, 2, 0, 0, 1, 0, 1, 0, 0 ,  };
static const char  _eofact_char_class [] = { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 3, 1, 1, 1, 4, 1, 1, 5, 1, 1, 6, 1, 7, 0 ,  };
static const char  _eofact_index_offsets [] = { 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 14, 0 ,  };
static const char  _eofact_indices [] = { 0, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 ,  };
static const char  _eofact_index_defaults [] = { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 ,  };
static const char  _eofact_trans_cond_spaces [] = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0 ,  };
static const char  _eofact_cond_targs [] = { 2, 0, 6, 3, 4, 5, 10, 7, 8, 9, 12, 11, 0 ,  };
static const char  _eofact_cond_actions [] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,  };
static const char  _eofact_eof_actions [] = { 0, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 0, 5, 0 ,  };
static const char  _eofact_nfa_targs [] = { 0, 0 ,  };
static const char  _eofact_nfa_offsets [] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,  };
static const char  _eofact_nfa_push_actions [] = { 0, 0 ,  };
static const char  _eofact_nfa_pop_trans [] = { 0, 0 ,  };
static const int  eofact_start  = 1;
static const int  eofact_first_final  = 10;
static const int  eofact_error  = 0;
static const int  eofact_en_main  = 1;
int cs;
int blen;
char buffer[1024];

void init()
{

	{
		cs = ( int ) eofact_start;
	}
}

void exec( char *data, int len )
{
	char *p = data;
	char *pe = data + len;
	char *eof = pe;
	
	{
		unsigned int _trans = 0;
		unsigned int _have = 0;
		unsigned int _cont = 1;
		const char  *_keys;
		const char  *_inds;
		while ( _cont == 1  )
		{
		
			if ( cs == 0  )
			_cont = 0;
			
			_have = 0;
			if ( p == pe  )
			{
				if ( p == eof  )
				{
					if ( _have == 0  )
					{
						switch ( _eofact_eof_actions[cs] ) {
							case 2 :
							{
								printf( "%s", "a1\n" );
								
							}
							
							break;
							case 4 :
							{
								printf( "%s", "a2\n" );
								
							}
							
							break;
							case 3 :
							{
								printf( "%s", "a3\n" );
								
							}
							
							break;
							case 5 :
							{
								printf( "%s", "a4\n" );
								
							}
							
							break;
							case 1 :
							{
								printf( "%s", "a1\n" );
								
							}
							{
								printf( "%s", "a3\n" );
								
							}
							
							break;
							
						}
					}
					
				}
				
				
				if ( _have == 0  )
				_cont = 0;
				
			}
			
			if ( _cont == 1  )
			{
				if ( _have == 0  )
				{
					_keys = _eofact_trans_keys + (cs<<1);
					_inds = _eofact_indices + _eofact_index_offsets[cs];
					if ( ((*( p  ))
					)<= 116 && ((*( p  ))
					)>= 10  )
					{
						int _ic = ( int ) _eofact_char_class[( int ) ((*( p  ))
						)- 10];
						if ( _ic <= ( int ) (*( _keys+1  ))
						&& _ic >= ( int ) (*( _keys  ))
						)
						_trans = ( unsigned int  ) (*( _inds + ( int ) (_ic - ( int ) (*( _keys  ))
						) ))
						;
						
						else
						_trans = ( unsigned int  ) _eofact_index_defaults[cs];
						
					}
					
					else
					{
						_trans = ( unsigned int  ) _eofact_index_defaults[cs];
					}
					
					
				}
				
				if ( _cont == 1  )
				{
					cs = ( int ) _eofact_cond_targs[_trans];
					if ( cs == 0  )
					_cont = 0;
					
					if ( _cont == 1  )
					p += 1;
					
				}
			}
			
		}
		
	}
}

void finish( )
{
	if ( cs >= eofact_first_final )
	printf( "ACCEPT\n" );
	else
	printf( "FAIL\n" );
}

char *inp[] = {
	"",
	"h",
	"hell",
	"hello",
	"hello\n",
	"t",
	"ther",
	"there",
	"friend",
};

int inplen = 9;

int main( )
{
	int i;
	for ( i = 0; i < inplen; i++ ) {
		init();
		exec( inp[i], strlen(inp[i]) );
		finish();
	}
	return 0;
}

