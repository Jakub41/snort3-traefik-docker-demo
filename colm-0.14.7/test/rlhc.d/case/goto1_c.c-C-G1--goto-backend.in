host( "working/goto1_c.rl", 1 ) @{/*
	* @@LANG: c
	* @@GENERATED: true
	*/
	
	#include <string.h>
	#include <stdio.h>
	
	int target ;
	
	
	
	
	
}@
array s8 _goto1_nfa_targs( 0, 0 ) = { 0, 0 };

array s8 _goto1_nfa_offsets( 0, 0 ) = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

array s8 _goto1_nfa_push_actions( 0, 0 ) = { 0, 0 };

array s8 _goto1_nfa_pop_trans( 0, 0 ) = { 0, 0 };

value int goto1_start = 1;
value int goto1_first_final = 14;
value int goto1_error = 0;

value int goto1_en_unused = 2;
value int goto1_en_one = 8;
value int goto1_en_two = 11;
value int goto1_en_main = 1;

host( "working/goto1_c.rl", 35 ) @{
	int cs;
	int blen;
	char buffer[1024];
	
	void init()
	{
	}@
	{
		cs = cast(int)goto1_start;
	}
	host( "working/goto1_c.rl", 42 ) @{
	}
	
	void exec( char *data, int len )
	{
		char *p = data;
		char *pe = data + len;
	}@
	{
		if ( p == pe )
		goto _test_eof;
		if ( cs == 0 )
		goto _out;
		_resume:
		switch ( cs ) {
			case 1:
			switch( ( deref( data, p )) ) {
				case 10: {
					goto ctr0;
				}
				case 49: {
					goto ctr2;
				}
				case 50: {
					goto ctr3;
				}
			}
			{
				goto ctr1;
			}
			case 0:
			goto _out;
			case 14:
			{
				goto ctr1;
			}
			case 2:
			if ( ( deref( data, p )) == 117 ) {
				goto ctr4;
			}
			{
				goto ctr1;
			}
			case 3:
			if ( ( deref( data, p )) == 110 ) {
				goto ctr5;
			}
			{
				goto ctr1;
			}
			case 4:
			if ( ( deref( data, p )) == 117 ) {
				goto ctr6;
			}
			{
				goto ctr1;
			}
			case 5:
			if ( ( deref( data, p )) == 115 ) {
				goto ctr7;
			}
			{
				goto ctr1;
			}
			case 6:
			if ( ( deref( data, p )) == 101 ) {
				goto ctr8;
			}
			{
				goto ctr1;
			}
			case 7:
			if ( ( deref( data, p )) == 100 ) {
				goto ctr9;
			}
			{
				goto ctr1;
			}
			case 15:
			{
				goto ctr1;
			}
			case 8:
			if ( ( deref( data, p )) == 111 ) {
				goto ctr10;
			}
			{
				goto ctr1;
			}
			case 9:
			if ( ( deref( data, p )) == 110 ) {
				goto ctr11;
			}
			{
				goto ctr1;
			}
			case 10:
			if ( ( deref( data, p )) == 101 ) {
				goto ctr12;
			}
			{
				goto ctr1;
			}
			case 16:
			{
				goto ctr1;
			}
			case 11:
			if ( ( deref( data, p )) == 116 ) {
				goto ctr13;
			}
			{
				goto ctr1;
			}
			case 12:
			if ( ( deref( data, p )) == 119 ) {
				goto ctr14;
			}
			{
				goto ctr1;
			}
			case 13:
			if ( ( deref( data, p )) == 111 ) {
				goto ctr15;
			}
			{
				goto ctr1;
			}
			case 17:
			{
				goto ctr1;
			}
		}
		
		ctr1: cs = 0; goto _again;
		ctr4: cs = 3; goto _again;
		ctr5: cs = 4; goto _again;
		ctr6: cs = 5; goto _again;
		ctr7: cs = 6; goto _again;
		ctr8: cs = 7; goto _again;
		ctr10: cs = 9; goto _again;
		ctr11: cs = 10; goto _again;
		ctr13: cs = 12; goto _again;
		ctr14: cs = 13; goto _again;
		ctr0: cs = 14; goto _again;
		ctr2: cs = 14; goto f0;
		ctr3: cs = 14; goto f1;
		ctr9: cs = 15; goto _again;
		ctr12: cs = 16; goto f2;
		ctr15: cs = 17; goto f3;
		
		f2:
		host( "working/goto1_c.rl", 16 ) ${printf( "%s", "one\n" );
			target = 1;
			${cs = host( "-", 1 ) ={target}=; goto _again;}$}$
		goto _again;
		f3:
		host( "working/goto1_c.rl", 20 ) ${printf( "%s", "two\n" );
			target = 1;
			${cs = host( "-", 1 ) ={target}=; goto _again;}$}$
		goto _again;
		f0:
		host( "working/goto1_c.rl", 25 ) ${target = 8;
			${cs = host( "-", 1 ) ={target}=; goto _again;}$}$
		goto _again;
		f1:
		host( "working/goto1_c.rl", 27 ) ${target = 11;
			${cs = host( "-", 1 ) ={target}=; goto _again;}$}$
		goto _again;
		
		_again:
		if ( cs == 0 )
		goto _out;
		p+= 1;
		if ( p != pe )
		goto _resume;
		_test_eof: {}
		_out: {}
	}
	host( "working/goto1_c.rl", 49 ) @{
	}
	
	void finish( )
	{
		if ( cs >= goto1_first_final )
		printf( "ACCEPT\n" );
		else
		printf( "FAIL\n" );
	}
	
	char *inp[] = {
		"1one2two1one\n",
	};
	
	int inplen = 1;
	
	int main( )
	{
		int i;
		for ( i = 0; i < inplen; i++ ) {
			init();
			exec( inp[i], strlen(inp[i]) );
			finish();
		}
		return 0;
	}
	
}@