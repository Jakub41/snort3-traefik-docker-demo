#include <string.h>
#include <stdio.h>

int neg ;
int value ;





static const int  state_chart_start  = 3;
static const int  state_chart_first_final  = 3;
static const int  state_chart_error  = 0;
static const int  state_chart_en_main  = 3;
static const char  _state_chart_nfa_targs [] = { 0, 0 ,  };
static const char  _state_chart_nfa_offsets [] = { 0, 0, 0, 0, 0 ,  };
static const char  _state_chart_nfa_push_actions [] = { 0, 0 ,  };
static const char  _state_chart_nfa_pop_trans [] = { 0, 0 ,  };
int cs;
int blen;
char buffer[1024];

void init()
{
	value = 0;
	neg = 0;
	
	{
		cs = ( int ) state_chart_start;
	}
}

void exec( char *data, int len )
{
	char *p = data;
	char *pe = data + len;
	
	{
		if ( p == pe  )
		goto _test_eof;
		
		switch ( cs  ) {
			case 3:
			goto st_case_3;
			case 0:
			goto st_case_0;
			case 1:
			goto st_case_1;
			case 2:
			goto st_case_2;
			
		}
		goto st_out;
		ctr2:
		{
			if ( neg != 0 )
			{
				value = -1 * value;
				
			} 
			
		}
		{
			printf( "%d", value );
			printf( "%s", "\n" );
			
		}
		
		
		goto st3;
		st3:
		p+= 1;
		if ( p == pe  )
		goto _test_eof3;
		
		st_case_3:
		switch ( ((*( p  ))
		) ) {
			case 43:
			{
				goto ctr3;
			}
			case 45:
			{
				goto ctr4;
			}
			
		}
		if ( 48 <= ((*( p  ))
		)&& ((*( p  ))
		)<= 57  )
		{
			goto ctr5;
		}
		
		{
			goto st0;
		}
		st_case_0:
		st0:
		cs = 0;
		goto _out;
		ctr3:
		{
			neg = 0;
			value = 0;
			
		}
		
		
		goto st1;
		ctr4:
		{
			neg = 0;
			value = 0;
			
		}
		{
			neg = 1;
			
		}
		
		
		goto st1;
		st1:
		p+= 1;
		if ( p == pe  )
		goto _test_eof1;
		
		st_case_1:
		if ( 48 <= ((*( p  ))
		)&& ((*( p  ))
		)<= 57  )
		{
			goto ctr0;
		}
		
		{
			goto st0;
		}
		ctr0:
		{
			value = value * 10 + ( int ) ( (((*( p  ))
			)) - 48 )
			;
			
		}
		
		
		goto st2;
		ctr5:
		{
			neg = 0;
			value = 0;
			
		}
		{
			value = value * 10 + ( int ) ( (((*( p  ))
			)) - 48 )
			;
			
		}
		
		
		goto st2;
		st2:
		p+= 1;
		if ( p == pe  )
		goto _test_eof2;
		
		st_case_2:
		if ( ((*( p  ))
		)== 10  )
		{
			goto ctr2;
		}
		
		if ( 48 <= ((*( p  ))
		)&& ((*( p  ))
		)<= 57  )
		{
			goto ctr0;
		}
		
		{
			goto st0;
		}
		st_out:
		_test_eof3: cs = 3;
		goto _test_eof; 
		_test_eof1: cs = 1;
		goto _test_eof; 
		_test_eof2: cs = 2;
		goto _test_eof; 
		
		_test_eof: {}
		_out: {}
	}
}

void finish( )
{
	if ( cs >= state_chart_first_final )
	printf( "ACCEPT\n" );
	else
	printf( "FAIL\n" );
}

char *inp[] = {
	"1\n",
	"12\n",
	"222222\n",
	"+2123\n",
	"213 3213\n",
	"-12321\n",
	"--123\n",
	"-99\n",
	" -3000\n",
};

int inplen = 9;

int main( )
{
	int i;
	for ( i = 0; i < inplen; i++ ) {
		init();
		exec( inp[i], strlen(inp[i]) );
		finish();
	}
	return 0;
}

