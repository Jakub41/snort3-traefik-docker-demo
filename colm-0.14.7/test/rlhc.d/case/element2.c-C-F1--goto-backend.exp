#include <stdio.h>

struct LangEl
{
	int key;
	char *name;
};

struct fsm
{
	int cs;
};



static const int  _fsm_trans_keys [] = { 1, 0, 0, 0, 1, 2, 1, 0, 0 ,  };
static const char  _fsm_char_class [] = { 0, 1, 2, 0 ,  };
static const char  _fsm_index_offsets [] = { 0, 0, 1, 3, 0 ,  };
static const char  _fsm_indices [] = { 0, 0, 2, 0 ,  };
static const char  _fsm_index_defaults [] = { 0, 1, 1, 1, 0 ,  };
static const char  _fsm_trans_cond_spaces [] = { -1, -1, -1, 0 ,  };
static const char  _fsm_cond_targs [] = { 2, 0, 3, 0 ,  };
static const char  _fsm_cond_actions [] = { 1, 0, 1, 0 ,  };
static const char  _fsm_eof_actions [] = { 0, 0, 0, 2, 0 ,  };
static const char  _fsm_nfa_targs [] = { 0, 0 ,  };
static const char  _fsm_nfa_offsets [] = { 0, 0, 0, 0, 0 ,  };
static const char  _fsm_nfa_push_actions [] = { 0, 0 ,  };
static const char  _fsm_nfa_pop_trans [] = { 0, 0 ,  };
static const int  fsm_start  = 1;
static const int  fsm_first_final  = 3;
static const int  fsm_error  = 0;
static const int  fsm_en_main  = 1;
void fsm_init( struct fsm *fsm )
{

	{
		(fsm->cs) = ( int ) fsm_start;
	}
}

void fsm_execute( struct fsm *fsm,  struct LangEl *_data, int _len )
{
	struct LangEl *p = _data;
	struct LangEl *pe = _data+_len;
	struct LangEl *eof = pe;
	
	
	{
		int _trans = 0;
		const int  *_keys;
		const char  *_inds;
		if ( p == pe  )
		goto _test_eof;
		
		if ( (fsm->cs) == 0  )
		goto _out;
		
		_resume :
		_keys = _fsm_trans_keys + ((fsm->cs)<<1);
		_inds = _fsm_indices + _fsm_index_offsets[(fsm->cs)];
		if ( (p->key) <= 3 && (p->key) >= 1  )
		{
			int _ic = ( int ) _fsm_char_class[( int ) (p->key) - 1];
			if ( _ic <= ( int ) (*( _keys+1  ))
			&& _ic >= ( int ) (*( _keys  ))
			)
			_trans = ( int ) (*( _inds + ( int ) (_ic - ( int ) (*( _keys  ))
			) ))
			;
			
			else
			_trans = ( int ) _fsm_index_defaults[(fsm->cs)];
			
		}
		
		else
		{
			_trans = ( int ) _fsm_index_defaults[(fsm->cs)];
		}
		
		
		goto _match_cond;
		
		_match_cond :
		(fsm->cs) = ( int ) _fsm_cond_targs[_trans];
		if ( _fsm_cond_actions[_trans]== 0  )
		goto _again;
		
		
		switch ( _fsm_cond_actions[_trans] ) {
			case 1 :
			{
				printf("%s\n", p->name);
			}
			
			break;
			
		}
		
		_again :
		if ( (fsm->cs) == 0  )
		goto _out;
		
		p+= 1;
		if ( p != pe  )
		goto _resume;
		
		
		_test_eof :
		{}
		if ( p == eof  )
		{
			switch ( _fsm_eof_actions[(fsm->cs)] ) {
				case 2 :
				{
					printf("accept\n");
				}
				
				break;
				
			}
		}
		
		
		
		_out :
		{}
		
	}
}

int fsm_finish( struct fsm *fsm )
{
	if ( fsm->cs == fsm_error )
	return -1;
	if ( fsm->cs >= fsm_first_final )
	return 1;
	return 0;
}

int main()
{
	static struct fsm fsm;
	static struct LangEl lel[] = { 
		{1, "one"}, 
		{2, "two-a"}, 
		{2, "two-b"}, 
		{2, "two-c"}, 
		{3, "three"}
	};
	
	fsm_init( &fsm );
	fsm_execute( &fsm, lel, 5 );
	fsm_finish( &fsm );
	
	return 0;
}

