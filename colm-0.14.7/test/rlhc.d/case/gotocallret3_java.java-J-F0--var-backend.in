host( "working/gotocallret3_java.rl", 1 ) @{/*
	* @@LANG: java
	* @@GENERATED: true
	*/
	
	
	class gotocallret3_java
	{
		char comm ;
		int top ;
		int stack [] = new int[32];
		
		
		
		
		
	}@
	array s8 _gotocallret_actions( 0, 8 ) = { 0, 1, 0, 1, 1, 1, 2, 1, 3, 1, 5, 1, 7, 1, 8, 2, 0, 1, 2, 4, 6, 0 };
	
	array char _gotocallret_trans_keys( 0, 5 ) = { u(1), u(0), u(2), u(2), u(0), u(0), u(0), u(0), u(0), u(0), u(4), u(5), u(3), u(3), u(3), u(5), u(1), u(0), u(4), u(5), u(3), u(3), u(0) };
	
	array s8 _gotocallret_char_class( 0, 5 ) = { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0 };
	
	array s8 _gotocallret_index_offsets( 0, 12 ) = { 0, 0, 1, 2, 3, 4, 6, 7, 10, 10, 12, 0 };
	
	array s8 _gotocallret_indices( 0, 10 ) = { 1, 2, 4, 6, 8, 8, 9, 10, 0, 10, 8, 8, 9, 0 };
	
	array s8 _gotocallret_index_defaults( 0, 11 ) = { 0, 0, 0, 3, 5, 7, 7, 0, 11, 7, 7, 0 };
	
	array s8 _gotocallret_trans_cond_spaces( -1, 0 ) = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0 };
	
	array s8 _gotocallret_cond_targs( 0, 10 ) = { 0, 2, 7, 4, 8, 4, 8, 0, 9, 10, 1, 0, 0 };
	
	array s8 _gotocallret_cond_actions( 0, 18 ) = { 13, 18, 11, 1, 15, 0, 3, 7, 0, 0, 9, 0, 0 };
	
	array s8 _gotocallret_eof_actions( 0, 13 ) = { 0, 13, 13, 5, 5, 7, 7, 0, 5, 0, 0, 0 };
	
	array s8 _gotocallret_nfa_targs( 0, 0 ) = { 0, 0 };
	
	array s8 _gotocallret_nfa_offsets( 0, 0 ) = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	
	array s8 _gotocallret_nfa_push_actions( 0, 0 ) = { 0, 0 };
	
	array s8 _gotocallret_nfa_pop_trans( 0, 0 ) = { 0, 0 };
	
	value int gotocallret_start = 7;
	value int gotocallret_first_final = 7;
	value int gotocallret_error = 0;
	
	value int gotocallret_en_garble_line = 3;
	value int gotocallret_en_alp_comm = 5;
	value int gotocallret_en_dig_comm = 6;
	value int gotocallret_en_main = 7;
	
	host( "working/gotocallret3_java.rl", 66 ) @{
		int cs;
		
		void init()
		{
		}@
		{
			cs = cast(int)gotocallret_start;
			top = 0;
		}
		host( "working/gotocallret3_java.rl", 71 ) @{
		}
		
		void exec( char data[], int len )
		{
			char buffer [] = new char[1024];
			int blen = 0;
			int p = 0;
			int pe = len;
			
			int eof = len;
			String _s;
		}@
		{
			uint _trans = 0;
			uint _have = 0;
			uint _cont = 1;
			index s8 _acts;
			uint _nacts;
			index char _keys;
			index s8 _inds;
			while ( _cont == 1 ) {
				
				if ( cs == 0 )
				_cont = 0;
				_have = 0;
				if ( p == pe ) {
					if ( p == eof )
					{
						if ( _have == 0 ) {
							index s8 __acts;
							uint __nacts;
							__acts = offset( _gotocallret_actions, _gotocallret_eof_actions[cs] );
							__nacts = cast(uint)deref( _gotocallret_actions, __acts );
							__acts += 1;
							while ( __nacts > 0 ) {
								switch ( deref( _gotocallret_actions, __acts ) ) {
									case 2 {
										host( "working/gotocallret3_java.rl", 23 ) ${System.out.print( "error: failed to recover\n" );
										}$
									}
									case 3 {
										host( "working/gotocallret3_java.rl", 33 ) ${${p = p - 1; }$${top-= 1;cs = stack[top]; }$}$
									}
									case 8 {
										host( "working/gotocallret3_java.rl", 60 ) ${${p = p - 1; }$${cs = 3;}$}$
									}
								}
								__nacts -= 1;
								__acts += 1;
							}
						}
					}
					
					if ( _have == 0 )
					_cont = 0;
				}
				if ( _cont == 1 ) {
					if ( _have == 0 ) {
						_keys = offset( _gotocallret_trans_keys, (cs<<1) );
						_inds = offset( _gotocallret_indices, _gotocallret_index_offsets[cs] );
						
						if ( ( deref( data, p )) <= 122 && ( deref( data, p )) >= 10 )
						{
							int _ic = cast(int)_gotocallret_char_class[cast(int)( deref( data, p )) - 10];
							if ( _ic <= cast(int)deref( _gotocallret_trans_keys, _keys+1 ) && _ic >= cast(int)deref( _gotocallret_trans_keys, _keys ) )
							_trans = cast(uint)deref( _gotocallret_indices, _inds + cast(int)( _ic - cast(int)deref( _gotocallret_trans_keys, _keys ) )  ); 
							else
							_trans = cast(uint)_gotocallret_index_defaults[cs];
						}
						else {
							_trans = cast(uint)_gotocallret_index_defaults[cs];
						}
						
					}
					if ( _cont == 1 ) {
						cs = cast(int)_gotocallret_cond_targs[_trans];
						
						if ( _gotocallret_cond_actions[_trans] != 0 ) {
							_acts = offset( _gotocallret_actions, _gotocallret_cond_actions[_trans] );
							_nacts = cast(uint)deref( _gotocallret_actions, _acts );
							_acts += 1;
							while ( _nacts > 0 )
							{
								switch ( deref( _gotocallret_actions, _acts ) )
								{
									case 0 {
										host( "working/gotocallret3_java.rl", 20 ) ${System.out.print( "error: garbling line\n" );
										}$
									}
									case 1 {
										host( "working/gotocallret3_java.rl", 22 ) ${${cs = 7;}$}$
									}
									case 3 {
										host( "working/gotocallret3_java.rl", 33 ) ${${p = p - 1; }$${top-= 1;cs = stack[top]; }$}$
									}
									case 4 {
										host( "working/gotocallret3_java.rl", 41 ) ${if ( comm >= 97 )
											{
												${stack[top] = cs; top += 1;cs = 5;}$} 
											else {
												${stack[top] = cs; top += 1;cs = 6;}$}
										}$
									}
									case 5 {
										host( "working/gotocallret3_java.rl", 52 ) ${comm = ={( deref( data, p ))}=;
										}$
									}
									case 6 {
										host( "working/gotocallret3_java.rl", 53 ) ${System.out.print( "prints\n" );
										}$
									}
									case 7 {
										host( "working/gotocallret3_java.rl", 55 ) ${System.out.print( "correct command\n" );
										}$
									}
									case 8 {
										host( "working/gotocallret3_java.rl", 60 ) ${${p = p - 1; }$${cs = 3;}$}$
									}
								}
								_nacts -= 1;
								_acts += 1;
							}
						}
						
						if ( cs == 0 )
						_cont = 0;
						if ( _cont == 1 )
						p += 1;
						
					}}
			}
		}
		host( "working/gotocallret3_java.rl", 83 ) @{
		}
		
		void finish( )
		{
			if ( cs >= gotocallret_first_final )
			System.out.println( "ACCEPT" );
			else
			System.out.println( "FAIL" );
		}
		
		static final String inp[] = {
			"lkajsdf\n",
			"2134\n",
			"(\n",
			"\n",
			"*234234()0909 092 -234aslkf09`1 11\n",
			"1\n",
			"909\n",
			"1 a\n",
			"11 1\n",
			"a 1\n",
			"aa a\n",
			"1 1\n",
			"1 123456\n",
			"a a\n",
			"a abcdef\n",
			"h",
			"a aa1",
		};
		
		static final int inplen = 17;
		
		public static void main (String[] args)
		{
			gotocallret3_java machine = new gotocallret3_java();
			for ( int i = 0; i < inplen; i++ ) {
				machine.init();
				machine.exec( inp[i].toCharArray(), inp[i].length() );
				machine.finish();
			}
		}
	}
}@