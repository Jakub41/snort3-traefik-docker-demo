host( "working/gotocallret3_go.rl", 1 ) @{/*
	* @@LANG: go
	* @@GENERATED: true
	*/
	
	package main
	import "fmt"
	
	var comm  byte ;
	var top  int ;
	var stack [32] int ;
	
	
	
	
	var cs int;
	var blen int;
	var buffer [1024] byte;
	
}@
array s8 _gotocallret_eof_actions( 0, 8 ) = { 0, 1, 1, 4, 4, 8, 8, 0, 4, 0, 0, 0 };

array s8 _gotocallret_nfa_targs( 0, 0 ) = { 0, 0 };

array s8 _gotocallret_nfa_offsets( 0, 0 ) = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

array s8 _gotocallret_nfa_push_actions( 0, 0 ) = { 0, 0 };

array s8 _gotocallret_nfa_pop_trans( 0, 0 ) = { 0, 0 };

value int gotocallret_start = 7;
value int gotocallret_first_final = 7;
value int gotocallret_error = 0;

value int gotocallret_en_garble_line = 3;
value int gotocallret_en_alp_comm = 5;
value int gotocallret_en_dig_comm = 6;
value int gotocallret_en_main = 7;

host( "working/gotocallret3_go.rl", 72 ) @{
	
	func prepare() {
	}@
	{
		cs = cast(int)gotocallret_start;
		top = 0;
	}
	host( "working/gotocallret3_go.rl", 75 ) @{
	}
	
	func exec(data string) {
		var p int = 0
		var pe int = len(data)
		var eof int = pe
	}@
	{
		if ( p == pe )
		goto _test_eof;
		if ( cs == 0 )
		goto _out;
		_resume:
		switch ( cs ) {
			case 7:
			if ( ( deref( data, p )) > 57 ) {
				if ( 97 <= ( deref( data, p )) && ( deref( data, p )) <= 122 ) {
					goto ctr10;
				}
			} else if ( ( deref( data, p )) >= 48 ) {
				goto ctr10;
			}
			{
				goto ctr0;
			}
			case 0:
			goto _out;
			case 1:
			if ( ( deref( data, p )) == 32 ) {
				goto ctr1;
			}
			{
				goto ctr0;
			}
			case 2:
			if ( ( deref( data, p )) == 10 ) {
				goto ctr2;
			}
			{
				goto ctr0;
			}
			case 3:
			if ( ( deref( data, p )) == 10 ) {
				goto ctr4;
			}
			{
				goto ctr3;
			}
			case 4:
			if ( ( deref( data, p )) == 10 ) {
				goto ctr6;
			}
			{
				goto ctr5;
			}
			case 8:
			{
				goto ctr11;
			}
			case 5:
			if ( ( deref( data, p )) > 90 ) {
				if ( 97 <= ( deref( data, p )) && ( deref( data, p )) <= 122 ) {
					goto ctr8;
				}
			} else if ( ( deref( data, p )) >= 65 ) {
				goto ctr8;
			}
			{
				goto ctr7;
			}
			case 9:
			if ( ( deref( data, p )) > 90 ) {
				if ( 97 <= ( deref( data, p )) && ( deref( data, p )) <= 122 ) {
					goto ctr8;
				}
			} else if ( ( deref( data, p )) >= 65 ) {
				goto ctr8;
			}
			{
				goto ctr7;
			}
			case 6:
			if ( 48 <= ( deref( data, p )) && ( deref( data, p )) <= 57 ) {
				goto ctr9;
			}
			{
				goto ctr7;
			}
			case 10:
			if ( 48 <= ( deref( data, p )) && ( deref( data, p )) <= 57 ) {
				goto ctr9;
			}
			{
				goto ctr7;
			}
		}
		
		ctr11: cs = 0; goto _again;
		ctr0: cs = 0; goto f0;
		ctr7: cs = 0; goto f7;
		ctr10: cs = 1; goto f8;
		ctr1: cs = 2; goto f1;
		ctr5: cs = 4; goto _again;
		ctr3: cs = 4; goto f4;
		ctr2: cs = 7; goto f2;
		ctr4: cs = 8; goto f5;
		ctr6: cs = 8; goto f6;
		ctr8: cs = 9; goto _again;
		ctr9: cs = 10; goto _again;
		
		f4:
		host( "working/gotocallret3_go.rl", 20 ) ${fmt.Print( "error: garbling line\n" );}$
		goto _again;
		f6:
		host( "working/gotocallret3_go.rl", 21 ) ${cs = 7;}$
		goto _again;
		f7:
		host( "working/gotocallret3_go.rl", 32 ) ${${p = p - 1; }$ 
			${top-= 1;cs = stack[top];}$
		}$
		goto _again;
		f8:
		host( "working/gotocallret3_go.rl", 55 ) ${comm = ={( deref( data, p ))}=;
		}$
		goto _again;
		f2:
		host( "working/gotocallret3_go.rl", 57 ) ${fmt.Print( "correct command\n" );}$
		goto _again;
		f0:
		host( "working/gotocallret3_go.rl", 61 ) ${${p = p - 1; }$
			cs = 3;}$
		goto _again;
		f5:
		host( "working/gotocallret3_go.rl", 20 ) ${fmt.Print( "error: garbling line\n" );}$	host( "working/gotocallret3_go.rl", 21 ) ${cs = 7;}$
		goto _again;
		f1:
		host( "working/gotocallret3_go.rl", 42 ) ${if ( comm >= 97 ) {
				${stack[top] = cs; top += 1;cs = 5; }$} else {
				${stack[top] = cs; top += 1;cs = 6; }$}
		}$	host( "working/gotocallret3_go.rl", 56 ) ${fmt.Print( "prints\n" );}$
		goto _again;
		
		_again:
		if ( cs == 0 )
		goto _out;
		p+= 1;
		if ( p != pe )
		goto _resume;
		_test_eof: {}
		if ( p == eof )
		{
			switch ( _gotocallret_eof_actions[cs] ) {
				case 4{
					host( "working/gotocallret3_go.rl", 23 ) ${fmt.Print( "error: failed to recover\n" );}$
				}
				case 8{
					host( "working/gotocallret3_go.rl", 32 ) ${${p = p - 1; }$ 
						${top-= 1;cs = stack[top];}$
					}$
				}
				case 1{
					host( "working/gotocallret3_go.rl", 61 ) ${${p = p - 1; }$
						cs = 3;}$
				}
			}
		}
		
		_out: {}
	}
	host( "working/gotocallret3_go.rl", 82 ) @{
	}
	func finish() {
		if cs >= gotocallret_first_final {
			fmt.Println("ACCEPT")
		} else {
			fmt.Println("FAIL")
		}
	}
	var inp []string = []string {
		"lkajsdf\n",
		"2134\n",
		"(\n",
		"\n",
		"*234234()0909 092 -234aslkf09`1 11\n",
		"1\n",
		"909\n",
		"1 a\n",
		"11 1\n",
		"a 1\n",
		"aa a\n",
		"1 1\n",
		"1 123456\n",
		"a a\n",
		"a abcdef\n",
		"h",
		"a aa1",
	};
	
	func main() {
		for _, data := range inp {
			prepare()
			exec(data)
			finish()
		}
	}
}@