package main
import "fmt"







var cs int;
var blen int;
var buffer [1024] byte;

var state_act_start  int  = 4
var state_act_first_final  int  = 4
var state_act_error  int  = 0
var state_act_en_main  int  = 4
var state_act_en_main_line_again  int  = 3
var _state_act_nfa_targs [] int8  = [] int8  { 0, 0  }
var _state_act_nfa_offsets [] int8  = [] int8  { 0, 0, 0, 0, 0, 0, 0  }
var _state_act_nfa_push_actions [] int8  = [] int8  { 0, 0  }
var _state_act_nfa_pop_trans [] int8  = [] int8  { 0, 0  }
func prepare() {

	{
		cs = int(state_act_start);
	}
}

func exec(data string) {
	var p int = 0
	var pe int = len(data)
	
	{
		if p == pe  {
			goto _test_eof;
			
		}
		goto _resume;
		
		_again:
		switch cs  {
			case 4:
			goto st4;
			case 0:
			goto st0;
			case 1:
			goto st1;
			case 2:
			goto st2;
			case 5:
			goto st5;
			case 3:
			goto st3;
			
		}
		_resume:
		switch cs  {
			case 4:
			goto st_case_4;
			case 0:
			goto st_case_0;
			case 1:
			goto st_case_1;
			case 2:
			goto st_case_2;
			case 5:
			goto st_case_5;
			case 3:
			goto st_case_3;
			
		}
		goto st_out;
		st4:
		{fmt.Print( "a1\n" );}
		{fmt.Print( "b1\n" );}
		
		p+= 1;
		if p == pe  {
			goto _test_eof4;
			
		}
		st_case_4:
		{fmt.Print( "a2\n" );}
		{fmt.Print( "b2\n" );}
		if ( data[p ]) == 104  {
			{
				goto st1;
			}
			
		}
		{
			goto st0;
		}
		st_case_0:
		st0:
		cs = 0;
		goto _out;
		st1:
		p+= 1;
		if p == pe  {
			goto _test_eof1;
			
		}
		st_case_1:
		if ( data[p ]) == 105  {
			{
				goto st2;
			}
			
		}
		{
			goto st0;
		}
		st2:
		{fmt.Print( "c1\n" );}
		
		p+= 1;
		if p == pe  {
			goto _test_eof2;
			
		}
		st_case_2:
		{fmt.Print( "c2\n" );}
		if ( data[p ]) == 10  {
			{
				goto ctr2;
			}
			
		}
		{
			goto st0;
		}
		ctr2:
		cs = 5;
		{cs = 3;}
		
		
		goto _again;
		st5:
		{fmt.Print( "b1\n" );}
		
		p+= 1;
		if p == pe  {
			goto _test_eof5;
			
		}
		st_case_5:
		{fmt.Print( "b2\n" );}
		if ( data[p ]) == 104  {
			{
				goto st1;
			}
			
		}
		{
			goto st0;
		}
		st3:
		{fmt.Print( "b1\n" );}
		
		p+= 1;
		if p == pe  {
			goto _test_eof3;
			
		}
		st_case_3:
		{fmt.Print( "b2\n" );}
		if ( data[p ]) == 104  {
			{
				goto st1;
			}
			
		}
		{
			goto st0;
		}
		st_out:
		_test_eof4: cs = 4;
		goto _test_eof; 
		_test_eof1: cs = 1;
		goto _test_eof; 
		_test_eof2: cs = 2;
		goto _test_eof; 
		_test_eof5: cs = 5;
		goto _test_eof; 
		_test_eof3: cs = 3;
		goto _test_eof; 
		
		_test_eof: {}
		_out: {}
	}
}
func finish() {
	if cs >= state_act_first_final {
		fmt.Println("ACCEPT")
	} else {
		fmt.Println("FAIL")
	}
}
var inp []string = []string {
	"hi\nhi\n",
};

func main() {
	for _, data := range inp {
		prepare()
		exec(data)
		finish()
	}
}
